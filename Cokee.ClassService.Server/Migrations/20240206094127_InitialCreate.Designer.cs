// <auto-generated />
using System;
using Cokee.ClassService.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cokee.ClassService.Server.Migrations
{
    [DbContext(typeof(GlobalDbContext))]
    [Migration("20240206094127_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cokee.ClassService.Shared.Class", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OwnerUserID")
                        .HasColumnType("int");

                    b.Property<string>("SchoolName")
                        .HasColumnType("longtext");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerUserID");

                    b.ToTable("Classes", (string)null);
                });

            modelBuilder.Entity("Cokee.ClassService.Shared.Student", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ClassID")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("longtext");

                    b.Property<int>("EnrollClassID")
                        .HasColumnType("int");

                    b.Property<string>("HeadPicUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsMinorLang")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PasswordType")
                        .HasColumnType("int");

                    b.Property<long?>("QQ")
                        .HasColumnType("bigint");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("RoleStr")
                        .HasColumnType("longtext");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClassID");

                    b.HasIndex("EnrollClassID");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Cokee.ClassService.Shared.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PasswordType")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegiestedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Cokee.ClassService.Shared.Class", b =>
                {
                    b.HasOne("Cokee.ClassService.Shared.User", "Owner")
                        .WithMany("OwnedClasses")
                        .HasForeignKey("OwnerUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Cokee.ClassService.Shared.Student", b =>
                {
                    b.HasOne("Cokee.ClassService.Shared.Class", null)
                        .WithMany("Students")
                        .HasForeignKey("ClassID");

                    b.HasOne("Cokee.ClassService.Shared.Class", "Class")
                        .WithMany()
                        .HasForeignKey("EnrollClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Cokee.ClassService.Shared.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Cokee.ClassService.Shared.User", b =>
                {
                    b.Navigation("OwnedClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
